import React, { useState } from 'react';
import { Search, UserPlus, Edit, Eye } from 'lucide-react';
import { useAppContext } from '../../context/AppContext';
import { Patient } from '../../types';
import Card from '../../components/common/Card';
import PatientRegistrationForm from './PatientRegistrationForm';

const PatientList: React.FC = () => {
  const { patients, addToQueue } = useAppContext();
  const [searchTerm, setSearchTerm] = useState('');
  const [showRegistrationForm, setShowRegistrationForm] = useState(false);
  
  const filteredPatients = patients.filter(
    (patient) => 
      patient.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      patient.mrn.toLowerCase().includes(searchTerm.toLowerCase()) ||
      (patient.phone && patient.phone.includes(searchTerm))
  );
  
  const handleAddToQueue = async (patient: Patient) => {
    // Add patient to doctor queue (you could ask which doctor in a real implementation)
    await addToQueue({
      patientId: patient.id,
      patientName: patient.name,
      serviceType: 'doctor',
      serviceId: 'user1', // First doctor for demo
      ticketNumber: '', // Will be generated by the system
      status: 'waiting',
      priority: 'normal',
    });
    
    alert(`${patient.name} has been added to the queue`);
  };
  
  return (
    <div>
      {showRegistrationForm ? (
        <Card title="New Patient Registration">
          <PatientRegistrationForm 
            onSuccess={() => setShowRegistrationForm(false)}
            onCancel={() => setShowRegistrationForm(false)}
          />
        </Card>
      ) : (
        <>
          <div className="flex flex-col md:flex-row md:items-center md:justify-between mb-6">
            <div className="mb-4 md:mb-0">
              <h2 className="text-2xl font-bold text-gray-800">Patient Records</h2>
              <p className="text-gray-600">Manage and access patient information</p>
            </div>
            
            <div className="flex flex-col md:flex-row gap-3">
              <div className="relative">
                <input
                  type="text"
                  placeholder="Search patients..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 w-full"
                />
                <Search className="h-5 w-5 text-gray-400 absolute left-3 top-2.5" />
              </div>
              
              <button
                onClick={() => setShowRegistrationForm(true)}
                className="flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                <UserPlus className="h-5 w-5 mr-2" />
                New Patient
              </button>
            </div>
          </div>
          
          <div className="bg-white shadow rounded-lg overflow-hidden">
            <div className="overflow-x-auto">
              <table className="min-w-full divide-y divide-gray-200">
                <thead className="bg-gray-50">
                  <tr>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      MRN
                    </th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Patient Name
                    </th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Date of Birth
                    </th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Gender
                    </th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Phone
                    </th>
                    <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Registration Date
                    </th>
                    <th scope="col" className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody className="bg-white divide-y divide-gray-200">
                  {filteredPatients.length > 0 ? (
                    filteredPatients.map((patient) => (
                      <tr key={patient.id} className="hover:bg-gray-50">
                        <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                          {patient.mrn}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                          {patient.name}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {patient.dateOfBirth}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 capitalize">
                          {patient.gender}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {patient.phone}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          {patient.registrationDate}
                        </td>
                        <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-right">
                          <div className="flex space-x-2 justify-end">
                            <button 
                              className="text-blue-600 hover:text-blue-900"
                              title="View Patient Details"
                            >
                              <Eye className="h-5 w-5" />
                            </button>
                            <button 
                              className="text-green-600 hover:text-green-900"
                              title="Edit Patient"
                            >
                              <Edit className="h-5 w-5" />
                            </button>
                            <button 
                              className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-xs font-medium"
                              onClick={() => handleAddToQueue(patient)}
                              title="Add to Queue"
                            >
                              Add to Queue
                            </button>
                          </div>
                        </td>
                      </tr>
                    ))
                  ) : (
                    <tr>
                      <td colSpan={7} className="px-6 py-4 text-center text-sm text-gray-500">
                        {searchTerm 
                          ? 'No patients found matching your search criteria.' 
                          : 'No patients registered yet.'}
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default PatientList;